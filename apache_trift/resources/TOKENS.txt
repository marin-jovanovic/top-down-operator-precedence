comment: if one token in line
comment:    keyword
comment: if two tokens in line
comment:    first token = token name
comment:    second token = token value
comment:
comment: if three tokens in line
comment:    first token = token name
comment:    second token =
comment:    third token = regex value
comment: fixme comma vs list separator

include
cpp_include
namespace
const
typedef
enum
senum
struct
xsd_all
union
exception
service
extends
list
map
set
cpp_type
xsd_optional
xsd_nillable
xsd_attrs
oneway
void
throws

NamespaceScope *
NamespaceScope c_glib
NamespaceScope cpp
NamespaceScope delphi
NamespaceScope haxe
NamespaceScope go
NamespaceScope java
NamespaceScope js
NamespaceScope lua
NamespaceScope netstd
NamespaceScope perl
NamespaceScope php
NamespaceScope py.twisted
NamespaceScope py
NamespaceScope rb
NamespaceScope st
NamespaceScope xsd

LeftCurlyBracket {
RightCurlyBracket }
LeftRoundBracket (
RightRoundBracket )
LeftSquareBracket [
RightSquareBracket ]
LeftAngleBracket <
RightAngleBracket >
Equal =
Underscore _
Colon :
Plus +
Minus -
Dot .
UpperE E
LowerE e

ListSeparator ,
ListSeparator ;

FieldReq required
FieldReq optional

BaseType bool
BaseType byte
BaseType i8
BaseType i16
BaseType i32
BaseType i64
BaseType double
BaseType string
BaseType binary
BaseType slist

IntConstant r (\+|-)?[0-9]+
Literal r (\"[^\"]*\")|(\'[^\']*\')
STIdentifier r ([a-zA-Z]|_)([a-zA-Z]|[0-9]|\.|_|-)*
Identifier r ([a-zA-Z]|_)([a-zA-Z]|[0-9]|\.|_)*
Letter r [a-zA-Z]
Digit r [0-9]
